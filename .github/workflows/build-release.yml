name: Upload Artifacts

on:
  release:
    types: [ published ]

env:
  CARGO_TERM_COLOR: always

jobs:
  prepare_build:
    name: Prepare build
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.get_tag_name.outputs.tag_name }}
    steps:
      - uses: actions/checkout@v3
      - name: Get tag name
        id: get_tag_name
        run: echo "tag_name=$(git describe --tags || git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  build_cross:
    name: Build cross
    needs: prepare_build
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        include:
          - target: i686-unknown-linux-musl
            file: qbt
            release_name: qbt-${{ needs.prepare_build.outputs.tag_name }}-i686-unknown-linux-musl
          - target: x86_64-pc-windows-gnu
            file: qbt.exe
            release_name: qbt-${{ needs.prepare_build.outputs.tag_name }}-x86_64-pc-windows-gnu.exe
          - target: x86_64-unknown-linux-gnu
            file: qbt
            release_name: qbt-${{ needs.prepare_build.outputs.tag_name }}-x86_64-unknown-linux-gnu
          - target: x86_64-unknown-linux-musl
            file: qbt
            release_name: qbt-${{ needs.prepare_build.outputs.tag_name }}-x86_64-unknown-linux-musl
          - target: armv7-unknown-linux-musleabihf
            file: qbt
            release_name: qbt-${{ needs.prepare_build.outputs.tag_name }}-armv7-unknown-linux-musleabihf
          - target: armv7-unknown-linux-gnueabihf
            file: qbt
            release_name: qbt-${{ needs.prepare_build.outputs.tag_name }}-armv7-unknown-linux-gnueabihf
          - target: arm-unknown-linux-gnueabi
            file: qbt
            release_name: qbt-${{ needs.prepare_build.outputs.tag_name }}-arm-unknown-linux-gnueabi
          - target: arm-unknown-linux-gnueabihf
            file: qbt
            release_name: qbt-${{ needs.prepare_build.outputs.tag_name }}-arm-unknown-linux-gnueabihf
          - target: arm-unknown-linux-musleabi
            file: qbt
            release_name: qbt-${{ needs.prepare_build.outputs.tag_name }}-arm-unknown-linux-musleabi
          - target: arm-unknown-linux-musleabihf
            file: qbt
            release_name: qbt-${{ needs.prepare_build.outputs.tag_name }}-arm-unknown-linux-musleabihf
          - target: aarch64-unknown-linux-gnu
            file: qbt
            release_name: qbt-${{ needs.prepare_build.outputs.tag_name }}-aarch64-unknown-linux-gnu
          - target: aarch64-unknown-linux-musl
            file: qbt
            release_name: qbt-${{ needs.prepare_build.outputs.tag_name }}-aarch64-unknown-linux-musl
    steps:
      - uses: actions/checkout@v3

      - name: Install cross
        run: cargo install cross

      - name: Build ${{ matrix.target }}
        run: cross build --release --target ${{ matrix.target }}

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.target }}/release/${{ matrix.file }}
          asset_name: ${{ matrix.release_name }}
          tag: ${{ github.ref }}
          overwrite: true

  build_native:
    name: Build native
    needs: prepare_build
    runs-on: ${{ matrix.os }}
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            file: qbt
            release_name: qbt-${{ needs.prepare_build.outputs.tag_name }}-linux-amd64
          - os: macos-latest
            file: qbt
            release_name: qbt-${{ needs.prepare_build.outputs.tag_name }}-macos-amd64
          - os: macos-latest
            file: aarch64-apple-darwin/qbt
            target: aarch64-apple-darwin
            release_name: mcl-installer-${{ needs.prepare_build.outputs.tag_name }}-macos-aarch64
          - os: windows-latest
            file: qbt.exe
            release_name: qbt-${{ needs.prepare_build.outputs.tag_name }}-windows-amd64.exe

    steps:
    - uses: actions/checkout@v3

    - name: Rustup add aarch64-apple-darwin
      if: matrix.target == 'aarch64-apple-darwin'
      run: rustup target add aarch64-apple-darwin

    - name: Build apple aarch64
      if: matrix.target == 'aarch64-apple-darwin'
      run: cargo build --release --target ${{ matrix.target }}

    - name: Build native
      if: matrix.target != 'aarch64-apple-darwin'
      run: cargo build --release

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/${{ matrix.file }}
        asset_name: ${{ matrix.release_name }}
        tag: ${{ github.ref }}
        overwrite: true
